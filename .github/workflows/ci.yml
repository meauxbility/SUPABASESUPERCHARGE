name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TEAM_OPENAI_API_KEY: ${{ secrets.TEAM_OPENAI_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Secret scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --no-banner --redact

      - name: Run linter
        run: npm run lint || echo "‚ö†Ô∏è Linting not configured"

      - name: Run tests
        run: npm run test || echo "‚ö†Ô∏è Tests not configured"

      - name: Build projects
        run: npm run build

      - name: Test Supabase connection
        run: |
          echo "üîó Testing Supabase connection..."
          if [ -n "$SUPABASE_URL" ] && [ -n "$SUPABASE_ANON_KEY" ]; then
            echo "‚úÖ Supabase secrets are available"
          else
            echo "‚ùå Supabase secrets are missing"
            exit 1
          fi

      - name: Test AI connections
        run: |
          echo "ü§ñ Testing AI connections..."
          if [ -n "$ANTHROPIC_API_KEY" ] && [ -n "$OPENAI_API_KEY" ]; then
            echo "‚úÖ AI API keys are available"
          else
            echo "‚ö†Ô∏è Some AI API keys are missing (optional for CI)"
          fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run security scan
        run: |
          echo "üîí Running security scan..."
          # Add your security scanning tools here
          # Example: npm audit, snyk, etc.

  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Check for secrets
        run: |
          echo "üîê Checking for secrets..."
          if grep -r -i "password\|secret\|key\|token" --exclude-dir=.git --exclude-dir=node_modules --exclude="*.md" . | grep -v "your_.*_here"; then
            echo "‚ùå Potential secrets detected"
            exit 1
          fi

  notion-sync:
    name: Notion Sync
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Sync with Notion
        run: npm run notion:sync
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

  team-notification:
    name: Team Notification
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify team
        run: |
          echo "üì¢ Notifying team of build status..."
          # Add your notification logic here
          # Example: Slack, Discord, email notifications
